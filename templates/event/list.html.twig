{%  extends "base.html.twig" %}

{%  block title %}
Accueil
{%  endblock %}

{%  block body %}
<div style="width: 100%; text-align: center; margin-bottom: 30px;">
    <h1>Nous retrouver autour d'un √©v√©nement</h1>
    <h3>Vous pr√©parez un √©v√©nement ? Ne restez plus seul ! Retrouvez-vous autour d‚Äôune activit√© tous ensemble.</h3>
</div>

<section class="event-container">

    <!-- üß≠ COLONNE GAUCHE - FILTRES -->
    <div class="filters">

    {% if selectedCategory %}
            <p style="text-align:center; font-style:italic;">
                √âv√©nements pour la cat√©gorie :
                <strong>
                    {{ categories|filter(cat => cat.id == selectedCategory)|first.nameCategory }}
                </strong>
        </p>
    {% endif %}

    <!-- MSG D'AFFICHAGE POUR BARRE DE RECHERCHE FILTREE RESULTAT-->
    {% if searchCity %}
        <p style="text-align:center; font-style:italic;">
            R√©sultats pour la ville : <strong>{{ searchCity }}</strong>
        </p>
    {% endif %}





        <!-- BARRE DE RECHERCHE PAR VILLE -->
        <form action="{{ path('app_events') }}" method="get" class="search-bar">
            <input type="search" name="terme" placeholder="Saisir le nom d'une ville" value="{{ searchCity ?? '' }}">
            <button type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
        </form>


        

       

       <!-- Liste d√©roulante Cat√©gories -->
        <div class="filter-row">
            <form action="{{ path('app_events') }}" method="get">
                <select name="id_category" onchange="this.form.submit()">
                    <option value="">Toutes les cat√©gories</option>
                    {% for cat in categories %}
                        <option value="{{ cat.id }}" {% if selectedCategory == cat.id %}selected{% endif %}>
                            {{ cat.nameCategory }}
                        </option>
                    {% endfor %}
                </select>
            </form>
        </div>



        <!-- Filtres √Çge 
            <div class="filter">
                <label>√Çge minimum : <span id="minAge">18</span></label>
                <input type="range" id="minRange" min="18" max="99" value="18">

                <label>√Çge maximum : <span id="maxAge">99</span></label>
                <input type="range" id="maxRange" min="18" max="99" value="99">
            </div>
        -->

        <!-- Filtre Date -->
        <form method="GET" action="{{ path('app_events') }}" class="date-filter">
            <label for="start_date">üìÖ √Ä partir du :</label>
            <input type="date" id="start_date" name="start_date" value="{{ app.request.query.get('start_date') }}">
<br>
            <label for="end_date">üìÖ Jusqu'au :</label>
            <input type="date" id="end_date" name="end_date" value="{{ app.request.query.get('end_date') }}">

            {# Conserver les autres filtres lors du submit #}
            <input type="hidden" name="id_category" value="{{ selectedCategory ?? '' }}">
            <input type="hidden" name="terme" value="{{ searchCity ?? '' }}">

            <button type="submit">Filtrer</button>
        </form>

       


        {% if events is empty %}
    <p>Vous n‚Äôavez cr√©√© aucun √©v√©nement pour le moment.</p>
{% else %}
    {# Affiche le nombre total d'√©v√©nements une seule fois #}
  <p>
    {{ events.getTotalItemCount }} √©v√©nement{{ events.getTotalItemCount > 1 ? 's' : '' }} trouv√©{{ events.getTotalItemCount > 1 ? 's' : '' }}.
</p>
   
{% endif %}


{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ label }}">
            {{ message }}
        </div>
    {% endfor %}
{% endfor %}


    </div>

    <!-- üß± COLONNE DROITE - GRILLE DES √âV√âNEMENTS -->
    
<div class="event-container">
    
      {% if events is not empty %}
    <div class="events-grid">
        {% for event in events %}
            <div class="event-card">
                {% if event.imageEvent %}
                    <img src="{{ asset('uploads/avatars/' ~ event.imageEvent) }}" alt="{{ event.titleEvent }}" class="event-image">
                {% else %}
                    <img src="{{ asset('uploads/avatars/default.png') }}" alt="Image par d√©faut" class="event-image">
                {% endif %}

                <div class="event-overlay">
                    <h2 class="event-title">{{ event.titleEvent }}</h2>

                    <div class="event-meta">
                        {% if event.category %}
                            <span class="event-category">{{ event.category.nameCategory }}</span>
                        {% endif %}

                        <div class="event-date">üìÖ {{ event.dateTimeEvent ? (event.dateTimeEvent|date('d/m/Y H:i')) : 'Date non d√©finie' }}</div>

                        {% if event.address %}
                            <div class="event-address">üìç {{ event.address.address }}, {{ event.address.city }}</div>
                        {% endif %}


                        



                {# Bouton ‚ÄúS‚Äôinscrire‚Äù seulement si l‚Äôutilisateur est connect√© #}
                    {% if app.user %}
                    <button>    
                    <a href="{{ path('viewthisevent', {id: event.id}) }}" class="btn btn-primary">
                            Voir +
                        </a>
                    </button>
                        <br>
                        
                    <button>
                        <a href="{{ path('event_register', {id: event.id}) }}" class="btn btn-primary">
                            S'inscrire √† cet √©v√©nement
                        </a>
                    </button>
                        {% else %}
                            <p><em>Connectez-vous pour vous inscrire</em></p>
                        {% endif %}


                    </div>
                </div>
            </div>
        {% endfor %}




<div class="pagination">
    {{ knp_pagination_render(events) }}
</div>



    </div>
{% else %}
    <p>Aucun √©v√©nement trouv√©.</p>
{% endif %}

</div>

</section>

<!-- üß† SCRIPT JS -->
<script>
    const minRange = document.getElementById('minRange');
    const maxRange = document.getElementById('maxRange');
    const minAge = document.getElementById('minAge');
    const maxAge = document.getElementById('maxAge');

    minRange.addEventListener('input', () => {
        if (parseInt(minRange.value) > parseInt(maxRange.value)) {
            minRange.value = maxRange.value;
        }
        minAge.textContent = minRange.value;
    });

    maxRange.addEventListener('input', () => {
        if (parseInt(maxRange.value) < parseInt(minRange.value)) {
            maxRange.value = minRange.value;
        }
        maxAge.textContent = maxRange.value;
    });
</script>

<!-- üé® STYLE CSS -->
<style>
    /* --- Structure g√©n√©rale --- */
    .event-container {
        display: flex;
        flex-direction : row;
        justify-content: space-between;
        
        gap: 30px;
        width: 100%;
        padding: 20px;
        box-sizing: border-box;
    }

    /* --- Colonne gauche (Filtres) --- */
    .filters {
        width: 30%;
        background-color: #f5f5f5;
        padding: 20px;
        border-radius: 10px;
    }

    .filters form,
    .filters div {
        margin-bottom: 20px;
    }

    .search-bar {
        display: flex;
        gap: 10px;
    }

    .search-bar input {
        flex: 1;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    .search-bar button {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 15px;
    }

    /* --- Colonne droite (Grille des √©v√©nements) --- */
    /* --- Grille d'√©v√©nements --- */
.events-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr); /* 4 √©v√©nements par ligne */
    gap: 30px;
    width: 100%;
    padding: 10px;
    box-sizing: border-box;
}

/* --- Carte d'√©v√©nement --- */
.event-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.event-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
}

.event-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
}

.event-overlay {
    padding: 15px;
}

.event-title {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 10px;
    color: #333;
}

.event-meta {
    font-size: 0.9rem;
    color: #555;
}

.event-category {
    display: inline-block;
    background-color: #007bff;
    color: white;
    padding: 5px 10px;
    border-radius: 15px;
    font-size: 0.8rem;
    margin-bottom: 8px;
}

/* --- Responsive --- */
@media (max-width: 1200px) {
    .events-grid {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-width: 800px) {
    .events-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 500px) {
    .events-grid {
        grid-template-columns: 1fr;
    }
}


  
</style>

{%  endblock %}


