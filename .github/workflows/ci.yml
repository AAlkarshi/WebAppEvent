name: CI - Symfony Tests

# Déclenche le workflow sur push ou pull request
on:
  push:
    branches: [ master, main, develop ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    # Configuration du service MySQL
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: "Abdullrahman"
          MYSQL_DATABASE: symfony_test_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -pAbdullrahman"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Récupère le code source du repository
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # Installe PHP 8.2 et les extensions nécessaires pour Symfony
      - name: ⚙️ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo_mysql
          coverage: none

      # Installe les dépendances Composer
      - name: 📦 Install Composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # Configure les variables d'environnement pour la base de test
      - name: 🗃️ Set up test environment variables
        run: |
          cp .env.test .env.local
          echo "DATABASE_URL=\"mysql://root:Abdullrahman@127.0.0.1:3306/symfony_test_test?serverVersion=8.0&charset=utf8mb4\"" >> .env.local

      # Attend que MySQL soit complètement prêt avant de lancer les migrations
      - name: ⏱ Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      # Applique les migrations Doctrine dans la base de test
      - name: 🧱 Run database migrations
        run: php bin/console doctrine:migrations:migrate --env=test --no-interaction

      # Exécute tous les tests unitaires PHPUnit
      - name: 🧪 Run PHPUnit tests
        run: php bin/phpunit --testdox

      # Exécute uniquement les tests de CategoryController (optionnel)
      - name: 🧪 Run category tests only
        run: php bin/phpunit tests/Controller/CategoryControllerTest.php --testdox
